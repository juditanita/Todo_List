{"ast":null,"code":"var _jsxFileName = \"/Users/juditszabo/Desktop/React_projects_practise/Todo_List/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState(JSON.parse(localStorage.getItem(\"list\")) || []);\n  const [isEdited, setIsEdited] = useState(false);\n  const [editedId, setEditedId] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\"\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name) {\n      //tell the user the input box is empty\n      showAlert(true, \"danger\", \"Enter data to the box\");\n    } else if (name && isEdited) {\n      //this is for editing\n\n      setList(list.map(item => {\n        if (item.id === editedId) {\n          return {\n            ...item,\n            title: name\n          };\n        }\n        return item;\n      }));\n      setName(\"\");\n      setIsEdited(false);\n      setEditedId(null);\n      showAlert(true, \"success\", \"Item modified\");\n    } else {\n      //item is added to the list and add some alert to tell the user that it is happening\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name\n      };\n      setList([...list, newItem]);\n      setName(\"\");\n      showAlert(true, \"success\", `${newItem.title} added to the list`);\n    }\n  };\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\n    setAlert({\n      show,\n      type,\n      msg\n    });\n  };\n  const clearList = () => {\n    showAlert(true, \"danger\", \"Items deleted\");\n    setList([]);\n  };\n  const removeItem = id => {\n    console.log(\"button clicked\");\n    const newList = list.filter(item => item.id !== id);\n    setList(newList);\n    showAlert(true, \"danger\", \"item removed\");\n  };\n  const editItem = id => {\n    const specificItem = list.find(item => item.id === id);\n    setIsEdited(true);\n    setEditedId(id);\n    const newName = specificItem.title;\n    setName(prevName => newName);\n    showAlert(true, \"success\", `${newName} added to the list`);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"grocery-form\",\n      children: [alert.show && /*#__PURE__*/_jsxDEV(Alert, {\n        ...alert,\n        removeAlert: showAlert,\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"grocery bud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"grocery\",\n          value: name,\n          onChange: event => setName(prev => event.target.value),\n          placeholder: \"e.g. buy eggs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: isEdited ? \"edit\" : \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), list.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-container\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        items: list,\n        removeItem: removeItem,\n        editItem: editItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-btn\",\n        onClick: clearList,\n        children: \"clear items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I1ETsrOFROEj8n1RkGvxRu7WPJg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","List","Alert","jsxDEV","_jsxDEV","App","_s","name","setName","list","setList","JSON","parse","localStorage","getItem","isEdited","setIsEdited","editedId","setEditedId","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","showAlert","map","item","id","title","newItem","Date","getTime","toString","clearList","removeItem","console","log","newList","filter","editItem","specificItem","find","newName","prevName","setItem","stringify","className","children","onSubmit","removeAlert","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","event","prev","target","placeholder","length","items","onClick","_c","$RefreshReg$"],"sources":["/Users/juditszabo/Desktop/React_projects_practise/Todo_List/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState(\n    JSON.parse(localStorage.getItem(\"list\")) || []\n  );\n\n  const [isEdited, setIsEdited] = useState(false);\n  const [editedId, setEditedId] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!name) {\n      //tell the user the input box is empty\n      showAlert(true, \"danger\", \"Enter data to the box\");\n    } else if (name && isEdited) {\n      //this is for editing\n\n      setList(\n        list.map((item) => {\n          if (item.id === editedId) {\n            return { ...item, title: name };\n          }\n\n          return item;\n        })\n      );\n      setName(\"\");\n      setIsEdited(false);\n      setEditedId(null);\n      showAlert(true, \"success\", \"Item modified\");\n    } else {\n      //item is added to the list and add some alert to tell the user that it is happening\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name,\n      };\n      setList([...list, newItem]);\n      setName(\"\");\n      showAlert(true, \"success\", `${newItem.title} added to the list`);\n    }\n  };\n\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\n    setAlert({ show, type, msg });\n  };\n\n  const clearList = () => {\n    showAlert(true, \"danger\", \"Items deleted\");\n    setList([]);\n  };\n\n  const removeItem = (id) => {\n    console.log(\"button clicked\");\n    const newList = list.filter((item) => item.id !== id);\n    setList(newList);\n    showAlert(true, \"danger\", \"item removed\");\n  };\n\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id === id);\n    setIsEdited(true);\n    setEditedId(id);\n    const newName = specificItem.title;\n    setName((prevName) => newName);\n    showAlert(true, \"success\", `${newName} added to the list`);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  return (\n    <section className=\"section-center\">\n      <form onSubmit={handleSubmit} className=\"grocery-form\">\n        {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\n        <h3>grocery bud</h3>\n        <div className=\"form-control\">\n          <input\n            type=\"text\"\n            className=\"grocery\"\n            value={name}\n            onChange={(event) => setName((prev) => event.target.value)}\n            placeholder=\"e.g. buy eggs\"\n          />\n          <button type=\"submit\" className=\"submit-btn\">\n            {isEdited ? \"edit\" : \"submit\"}\n          </button>\n        </div>\n      </form>\n      {list.length > 0 && (\n        <div className=\"grocery-container\">\n          <List items={list} removeItem={removeItem} editItem={editItem} />\n          <button className=\"clear-btn\" onClick={clearList}>\n            clear items\n          </button>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}